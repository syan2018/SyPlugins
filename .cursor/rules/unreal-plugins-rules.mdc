---
description: 
globs: 
alwaysApply: true
---
# Unreal Plugins Cursor Rules

## 代码生成规则
- 阅读 [README.md](mdc:README.md) 以确保对项目目标的把控
- 编辑相应模块插件时，也可同步阅读插件对应的 README.md
- 使用UE插件开发的最佳实践，保证高内聚低耦合
- 生成新类时必须遵循命名前缀规范:
    - 类: `Sy`
    - 接口: `ISy`
    - 枚举: `ESy`
    - 结构体: `FSy`
- 自动添加必要的包含声明
- 生成适当的导出宏


## 项目结构规则
- SyPlugins 是一个模块化插件系统，核心模块位于各自独立的目录下，注意区分
- 注意插件所属文件路径（通常是 `#PluginName#/Source/#PluginName#/Public` & `#PluginName#/Source/#PluginName#/Private` ）
- 更新插件功能时，注意维护插件自己的 README.md
- 存在新模块的引用时，注意维护 `.uplugin`、`.Build.cs` 文件的正确性
- **主要模块:**
    - **SyCore:** 基础设施，提供标识符和消息总线。位于 [SyCore](mdc:SyCore)
    - **SyStateCore:** 状态核心数据定义。位于 [SyStateCore](mdc:SyStateCore)
    - **SyStateManager:** 状态管理中心。位于 [SyStateManager](mdc:SyStateManager)
    - **SyOperation:** 状态操作定义。位于 [SyOperation](mdc:SyOperation)
    - **SyEntity:** 通用实体框架。位于 [SyEntity](mdc:SyEntity)
    - **SyFlowImpl:** Flow 插件实现。位于 [SyFlowImpl](mdc:SyFlowImpl)
    - **SyPluginsImpl:** 插件实现示例。位于 [SyPluginsImpl](mdc:SyPluginsImpl)
    - **SyGameplay:** 基础 Gameplay 玩法。位于 [SyGameplay](mdc:SyGameplay)
    - **SyQuest:** (计划中) 任务系统。


## 重构建议
- 识别可复用代码
- 建议适当的设计模式
- 提示潜在的性能问题


## 技术规范
- 遵循 Unreal Engine 编码标准
- 使用 `UPROPERTY` 和 `UFUNCTION` 确保反射
- 所有公共 API 必须有完整文档
- 关键功能需要单元测试覆盖